AWSTemplateFormatVersion: '2010-09-09'
Description: "Creates base infra AWS resources"
Metadata: {}

Parameters:
###########

  ## Access and regional params
  KeyName:
    Description: The EC2 Key Pair to allow SSH access to the instance
    Type: 'AWS::EC2::KeyPair::KeyName'
  AvailabilityZone:
    Description: Availability zone to deploy
    Type: AWS::EC2::AvailabilityZone::Name
  VpcCidrBlock:
    Description: The CIDR block used for the subnet where environment will be deployed
    Type: String
    Default: '10.0.0.0/16'
  OpenShiftCidrBlock:
    Description: The CIDR block used for the subnet where OpenShift will be deployed
    Type: String
    Default: '10.0.0.0/24'
  ChannelMiddlewareCidrBlock:
    Description: The CIDR block used for the subnet where the channel middleware will be deployed
    Type: String
    Default: '10.0.1.0/24'
  BackendMiddlewareCidrBlock:
    Description: The CIDR block used for the subnet where backend middleware will be deployed
    Type: String
    Default: '10.0.2.0/24'
  DeploymentId:
    Description: The deployment identifier
    Type: String

Resources:
##########

  ## Network resources
  DeploymentVPC:
    Type: "AWS::EC2::VPC"
    Properties:
      CidrBlock: !Ref VpcCidrBlock
      EnableDnsSupport: true
      EnableDnsHostnames: true
      Tags:
        - Key: Name
          Value: !Join
            - ''
            - - !Ref DeploymentId
              - '-vpc'
        - Key: DeploymentId
          Value: !Ref DeploymentId
        - Key: DeploymentType
          Value: 'development'

  InternetGateways:
    Type: AWS::EC2::InternetGateway
    Properties:
      Tags:
        - Key: Name
          Value: !Join
            - ''
            - - !Ref DeploymentId
              - '-internetgateway'
        - Key: DeploymentId
          Value: !Ref DeploymentId
        - Key: DeploymentType
          Value: 'development'

  GatewayAttachment:
    Type: AWS::EC2::VPCGatewayAttachment
    Properties:
      InternetGatewayId: !Ref InternetGateways
      VpcId: !Ref DeploymentVPC

  OpenShiftSubnet:
    Type: 'AWS::EC2::Subnet'
    Properties:
      VpcId: !Ref DeploymentVPC
      CidrBlock: !Ref OpenShiftCidrBlock
      AvailabilityZone: !Ref AvailabilityZone
      MapPublicIpOnLaunch: true
      Tags:
        - Key: Name
          Value: !Join
            - ''
            - - !Ref DeploymentId
              - '-openshift-subnet'
        - Key: DeploymentId
          Value: !Ref DeploymentId
        - Key: DeploymentType
          Value: 'development'
        - Key: DeploymentType
          Value: 'development'

  ChannelMiddlewareSubnet:
    Type: 'AWS::EC2::Subnet'
    Properties:
      VpcId: !Ref DeploymentVPC
      CidrBlock: !Ref ChannelMiddlewareCidrBlock
      AvailabilityZone: !Ref AvailabilityZone
      MapPublicIpOnLaunch: true
      Tags:
        - Key: Name
          Value: !Join
            - ''
            - - !Ref DeploymentId
              - '-channel-middleware-subnet'
        - Key: DeploymentId
          Value: !Ref DeploymentId
        - Key: DeploymentType
          Value: 'development'
        - Key: DeploymentType
          Value: 'development'

  BackendMiddlewareSubnet:
    Type: 'AWS::EC2::Subnet'
    Properties:
      VpcId: !Ref DeploymentVPC
      CidrBlock: !Ref BackendMiddlewareCidrBlock
      AvailabilityZone: !Ref AvailabilityZone
      MapPublicIpOnLaunch: true
      Tags:
        - Key: Name
          Value: !Join
            - ''
            - - !Ref DeploymentId
              - '-backend-middleware-subnet'
        - Key: DeploymentId
          Value: !Ref DeploymentId
        - Key: DeploymentType
          Value: 'development'
        - Key: DeploymentType
          Value: 'development'

  RouteTable:
    Type: 'AWS::EC2::RouteTable'
    Properties:
      VpcId: !Ref DeploymentVPC
      Tags:
        - Key: Name
          Value: !Join
            - ''
            - - !Ref DeploymentId
              - '-routetable'
        - Key: DeploymentId
          Value: !Ref DeploymentId
        - Key: DeploymentType
          Value: 'development'

  OpenShiftSubnetRouteTableAsoc:
    Type: "AWS::EC2::SubnetRouteTableAssociation"
    Properties:
      RouteTableId: !Ref RouteTable
      SubnetId: !Ref OpenShiftSubnet

  ChannelMiddlewareSubnetRouteTableAsoc:
    Type: "AWS::EC2::SubnetRouteTableAssociation"
    Properties:
      RouteTableId: !Ref RouteTable
      SubnetId: !Ref ChannelMiddlewareSubnet

  BackendMiddlewareSubnetRouteTableAsoc:
    Type: "AWS::EC2::SubnetRouteTableAssociation"
    Properties:
      RouteTableId: !Ref RouteTable
      SubnetId: !Ref BackendMiddlewareSubnet

  Route:
    Type: "AWS::EC2::Route"
    Properties:
      RouteTableId: !Ref RouteTable
      DestinationCidrBlock: 0.0.0.0/0
      GatewayId: !Ref InternetGateways

  SecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      Tags:
        - Key: Name
          Value: !Join
            - ''
            - - !Ref DeploymentId
              - '-remote-mgmt-group'
      GroupName: !Join
        - ''
        - - !Ref DeploymentId
          - '-remote-mgmt-group'
      GroupDescription: "SSH traffic in, all traffic out."
      VpcId: !Ref DeploymentVPC
      SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: 22
          ToPort: 22
          CidrIp: 0.0.0.0/0
      SecurityGroupEgress:
        - IpProtocol: '-1'
          CidrIp: 0.0.0.0/0

Outputs:
  VpcId:
    Value: !Ref DeploymentVPC
  OpenShiftSubnet:
    Value: !Ref OpenShiftSubnet 
  ChannelMiddlewareSubnet:
    Value: !Ref ChannelMiddlewareSubnet
  BackendMiddlewareSubnet:
    Value: !Ref BackendMiddlewareSubnet